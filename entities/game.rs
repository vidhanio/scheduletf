//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "game")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub guild_id: i64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub timestamp: DateTimeWithTimeZone,
    pub reservation_id: Option<i32>,
    pub connect_info: Option<String>,
    pub opponent_user_id: Option<i64>,
    pub game_format: i16,
    pub maps: Option<Vec<String>>,
    pub rgl_match_id: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::team_guild::Entity",
        from = "Column::GuildId",
        to = "super::team_guild::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TeamGuild,
}

impl Related<super::team_guild::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TeamGuild.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
